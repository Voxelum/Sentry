name: Build

on:
  push

jobs:
  build:
    if: ${{ !startsWith(github.event.head_commit.message, 'chore(release)') }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '8' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      run: ./gradlew build
    # - uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: "./build/libs/*.jar"
    #     token: ${{ secrets.GITHUB_TOKEN }}
    # - uses: edgarrc/action-7z@v1.0.4
    #   with:
    #     args: 7z a -t7z -mx=9 build.7z ./build/libs
    # - name: Upload Build
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: build
    #     path: build.7z
    - name: Try bump version
      id: version
      uses: ./.github/actions/bump-version
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore(release): version ${{ steps.version.outputs.version }}"
        title: Prepare Release ${{ steps.version.outputs.version }}
        body: ''
        branch: prepare-release-${{ env.GITHUB_REF_NAME }}
  release:
    if: startsWith(github.event.head_commit.message, 'chore(release)')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '8' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Get Release Version
      id: release
      uses: ./.github/actions/get-release-info
    - name: Draft Release
      id: create_release
      uses: voxelum/create-release@xmcl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release.outputs.version }}
        release_name: ${{ steps.release.outputs.version }}
        draft: false
        prerelease: false
        body: ''
        asset_dir_path: ./build/libs
